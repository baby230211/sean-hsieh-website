"use strict";(self.webpackChunkseanhsieh_website=self.webpackChunkseanhsieh_website||[]).push([[166],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var o=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),f=r,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||i;return t?o.createElement(d,a(a({ref:n},u),{},{components:t})):o.createElement(d,a({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=t(1163),r=(t(9496),t(9613));const i={sidebar_position:1},a="useConfirm",s={unversionedId:"Custom-hooks/useConfirm",id:"Custom-hooks/useConfirm",title:"useConfirm",description:"custom hooks on using dialog/modal with custom hooks",source:"@site/docs/Custom-hooks/useConfirm.md",sourceDirName:"Custom-hooks",slug:"/Custom-hooks/useConfirm",permalink:"/sean-hsieh-website/Custom-hooks/useConfirm",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/sean-hsieh-website/"},next:{title:"Create a Page",permalink:"/sean-hsieh-website/tutorial-basics/create-a-page"}},l={},c=[{value:"custom hooks on using dialog/modal with custom hooks",id:"custom-hooks-on-using-dialogmodal-with-custom-hooks",level:2}],u={toc:c},m="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"useconfirm"},"useConfirm"),(0,r.kt)("h2",{id:"custom-hooks-on-using-dialogmodal-with-custom-hooks"},"custom hooks on using dialog/modal with custom hooks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const useConfirm = (props = { title: '', content: '', primaryButtonText: '', secondaryButtonText: '' }) => {\n  const { title, content, primaryButtonText, secondaryButtonText } = props;\n  const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false);\n  const resolveCallback = useRef(null);\n  const requestForConfirm = useCallback(() => {\n    setIsConfirmDialogOpen(true);\n    return new Promise((resolve) => {\n      resolveCallback.current = resolve;\n    });\n  }, []);\n\n  const onConfirm = useCallback(async () => {\n    setIsConfirmDialogOpen(false);\n    if (resolveCallback.current) {\n      resolveCallback.current(true);\n    }\n  }, []);\n\n  const onCancel = useCallback(async () => {\n    setIsConfirmDialogOpen(false);\n    if (resolveCallback.current) {\n      resolveCallback.current(false);\n    }\n  }, []);\n\n  const confirmDialog = isConfirmDialogOpen && (\n    <Dialog open={isConfirmDialogOpen} onClose={onCancel} maxWidth=\"md\">\n      <Dialog.Title>\n        {title || 'Dialog Title'}\n      </Dialog.Title>\n      <Dialog.Content>\n        {content || 'Dialog Content'}\n      </Dialog.Content>\n      <Dialog.Action\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        confirmText={primaryButtonText || 'ok'}\n        cancelText={secondaryButtonText || 'cancel'}\n      />\n    </Dialog>\n  );\n\n  return [confirmDialog, requestForConfirm];\n};\n\nexport default useConfirm;\n")))}p.isMDXComponent=!0}}]);